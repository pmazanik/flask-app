version: 2.1

executors:
  docker-publisher:
    docker:
      - image: cimg/python:3.11

jobs:
  build-and-push:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.24
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update && sudo apt-get install -y awscli
      - run:
          name: Build Docker image
          command: |
            docker build -t $ECR_REPO_URI:latest ./flask-app
      - run:
          name: Authenticate to ECR
          command: |
            aws --version
            aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPO_URI
      - run:
          name: Push Docker image
          command: |
            docker push $ECR_REPO_URI:latest

  deploy-to-eks:
    docker:
      - image: cimg/python:3.11
    steps:
      - checkout
      - run:
          name: Install kubectl & AWS CLI v2
          command: |
            sudo apt-get update && sudo apt-get install -y unzip
            curl -LO "https://dl.k8s.io/release/v1.32.2/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            # AWS CLI v2
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            aws --version
            kubectl version --client
      - run:
          name: Update kubeconfig
          command: |
            aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name $EKS_CLUSTER_NAME
      # Запускается разово
      # - run:
      #     name: Install monitoring stack
      #     command: |
      #       helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      #       helm repo update
      #       helm install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace
      - run:
          name: Deploy manifests
          command: |
            kubectl apply -f k8s-manifests/deployment.yaml
            kubectl apply -f k8s-manifests/service.yaml
            kubectl apply -f k8s-manifests/ingress.yaml
            kubectl apply -f k8s-manifests/hpa.yaml
            kubectl apply -f k8s-manifests/prometheus-rules.yaml
            # kubectl apply -f k8s-manifests/servicemonitor.yaml
  setup-monitoring:
    docker:
      - image: cimg/python:3.11
    steps:
      - checkout
      - run:
          name: Install kubectl, awscli, Helm
          command: |
            sudo apt-get update && sudo apt-get install -y unzip
            curl -LO "https://dl.k8s.io/release/v1.32.2/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            curl -sSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      - run:
          name: Setup kubeconfig
          command: |
            aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name $EKS_CLUSTER_NAME
      - run:
          name: Install/upgrade Prometheus & Grafana (with external access)
          command: |
            helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
            helm repo update
            helm upgrade --install prometheus prometheus-community/kube-prometheus-stack \
              --namespace monitoring --create-namespace \
              --set grafana.service.type=LoadBalancer

  hold-for-manual-approval:
    type: approval

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-and-push
      - deploy-to-eks:
          requires:
            - build-and-push

  monitoring-pipeline:
    jobs:
      - hold-for-manual-approval
      - setup-monitoring:
          requires:
            - hold-for-manual-approval

